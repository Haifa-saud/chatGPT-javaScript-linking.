{"ast":null,"code":"import _toConsumableArray from \"C:\\\\ReactJS\\\\saudi_chat_gpt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\ReactJS\\\\saudi_chat_gpt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\ReactJS\\\\saudi_chat_gpt\\\\src\\\\FeasibilityInfo.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Button } from \"react-bootstrap\";\nimport FormHeader from './FormHeader';\nimport { useNavigate } from \"react-router-dom\";\nimport { questionsList } from \"./QuestionsData\";\nfunction FeasibilityInfo() {\n  var navigate = useNavigate();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    answers = _useState2[0],\n    setAnswers = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(questions),\n    _useState6 = _slicedToArray(_useState5, 2),\n    questions = _useState6[0],\n    setQuestions = _useState6[1];\n  var _useState7 = useState(1),\n    _useState8 = _slicedToArray(_useState7, 2),\n    currentPage = _useState8[0],\n    setCurrentPage = _useState8[1];\n  useEffect(function () {\n\n    // console.log(answers)\n  }, [answers]);\n  function onSelectAnswerChange(questionIndex, question, item) {\n    var filteredQuestions = answers.filter(function (item) {\n      return item.question !== questionIndex;\n    });\n    setAnswers([].concat(_toConsumableArray(filteredQuestions), [{\n      questionIndex: questionIndex,\n      question: question,\n      answer: item\n    }]));\n  }\n  function onCheckBoxAnswerSelected(questionIndex, question, item, answerText) {\n    var currentAnswer = answers.find(function (item) {\n      return item.questionIndex === questionIndex;\n    });\n    console.log(currentAnswer);\n    var filteredQuestions = answers.filter(function (item) {\n      return item.questionIndex !== questionIndex;\n    });\n    var result = [];\n    var filteredAnswer = [];\n    if (currentAnswer === undefined) {\n      filteredAnswer = [answerText];\n      result = [].concat(_toConsumableArray(filteredQuestions), [{\n        questionIndex: questionIndex,\n        question: question,\n        answer: filteredAnswer\n      }]);\n    } else {\n      filteredAnswer = [].concat(_toConsumableArray(currentAnswer.answer), [answerText]);\n      result = [].concat(_toConsumableArray(filteredQuestions), [{\n        questionIndex: questionIndex,\n        question: question,\n        answer: filteredAnswer\n      }]);\n    }\n    setAnswers(result);\n  }\n  function onTextInputChanged(text, question, questionIndex) {\n    var filteredQuestions = answers.filter(function (item) {\n      return item.questionIndex !== questionIndex;\n    });\n    console.log(questionIndex);\n    var result = [].concat(_toConsumableArray(filteredQuestions), [{\n      questionIndex: questionIndex,\n      question: question,\n      answer: text\n    }]);\n    setAnswers(result);\n  }\n  function getSelectInput(question, answer, questionIndex) {\n    var _this = this;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      class: \"form-select\",\n      \"aria-label\": \"Default select example\",\n      onChange: function onChange(item) {\n        return onSelectAnswerChange(questionIndex, question, item.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      index: 0,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, question), answer.map(function (option, index) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 48\n        }\n      }, option.trim());\n    })));\n  }\n  function getCheckInput(question, answer, questionIndex) {\n    var _this2 = this;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"right\",\n        paddingRight: 15,\n        color: \"#0497cc\",\n        fontSize: 24\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 100\n      }\n    }, question)), answer.map(function (option, index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check form-input\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 44\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-check-input\",\n        type: \"checkbox\",\n        onChange: function onChange() {\n          return onCheckBoxAnswerSelected(questionIndex, question, index, option);\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"check-label\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, option));\n    }));\n  }\n  function getTextInput(question, answer, questionIndex) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        padding: 10,\n        color: \"#00A3E0\",\n        fontSize: 18\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, question), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      onChange: function onChange(item) {\n        return onTextInputChanged(item.target.value, question, questionIndex);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }));\n  }\n  function getTextareaInput(question, answer, questionIndex) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        padding: 10,\n        color: \"#00A3E0\",\n        fontSize: 18\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, question), /*#__PURE__*/React.createElement(\"textarea\", {\n      style: {\n        width: \"100%\"\n      },\n      className: \"form-control\",\n      type: \"text\",\n      onChange: function onChange(item) {\n        return onTextInputChanged(item.target.value, question, questionIndex);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }));\n  }\n  function submitInfo() {\n    setLoading(true);\n    var fullText = \"\";\n    answers.map(function (_ref) {\n      var question = _ref.question,\n        answer = _ref.answer;\n      var answerText = answer;\n      if (Array.isArray(answer)) {\n        answerText = \"\";\n        answer.map(function (answerItem) {\n          answerText += answerItem + \" و \";\n        });\n      }\n      fullText += question + \" هي \" + answerText + \"أصنع لي دراسة جدى\";\n    });\n    console.log(fullText);\n    var body = JSON.stringify({\n      model: \"gpt-3.5-turbo\",\n      messages: [{\n        role: \"user\",\n        content: fullText\n      }],\n      temperature: 1\n    });\n    var headers = {\n      Authorization: \"Bearer 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\",\n      'Content-Type': 'application/json'\n    };\n    fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      body: body,\n      headers: headers\n    }).then(function (response) {\n      return response.json();\n    }).then(function (answer) {\n      console.log(\"inside then\");\n      setLoading(false);\n      navigate(\"/result/\", {\n        state: {\n          message: answer.choices[0].message.content\n        }\n      });\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, \"\\u0645\\u0639\\u0644\\u0648\\u0645\\u0627\\u062A \\u0627\\u0644\\u0645\\u0634\\u0631\\u0648\\u0639\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"infoForm col-sm-10 col-md-10 col-lg-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormHeader, {\n    currentPage: currentPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }), questions.map(function (_ref2, index) {\n    var question = _ref2.question,\n      answers = _ref2.answers,\n      page = _ref2.page,\n      type = _ref2.type;\n    // console.log(question, answers)\n    if (page === currentPage) {\n      if (type === \"select\") {\n        return getSelectInput(question, answers, index);\n      } else if (type === \"checkBox\") {\n        return getCheckInput(question, answers, index);\n      } else if (type === \"textarea\") {\n        return getTextareaInput(question, answers, index);\n      } else {\n        return getTextInput(question, answers, index);\n      }\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formBottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, currentPage > 1 && /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    className: \"nextButton\",\n    onClick: function onClick() {\n      return setCurrentPage(currentPage - 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 29\n    }\n  }, \"\\u0627\\u0644\\u0633\\u0627\\u0628\\u0642\"), currentPage < 4 ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    className: \"nextButton\",\n    onClick: function onClick() {\n      return setCurrentPage(currentPage + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 33\n    }\n  }, \"\\u0627\\u0644\\u062A\\u0627\\u0644\\u064A\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    className: \"nextButton\",\n    onClick: function onClick() {\n      return submitInfo();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 33\n    }\n  }, \"\\u0625\\u062C\\u0631\\u0627\\u0621 \\u062F\\u0631\\u0627\\u0633\\u0629 \\u0627\\u0644\\u062C\\u062F\\u0648\\u0649\"), loading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 29\n    }\n  })))));\n}\nexport default FeasibilityInfo;","map":{"version":3,"names":["React","useEffect","useState","Button","FormHeader","useNavigate","questionsList","FeasibilityInfo","navigate","_useState","_useState2","_slicedToArray","answers","setAnswers","_useState3","_useState4","loading","setLoading","_useState5","questions","_useState6","setQuestions","_useState7","_useState8","currentPage","setCurrentPage","onSelectAnswerChange","questionIndex","question","item","filteredQuestions","filter","concat","_toConsumableArray","answer","onCheckBoxAnswerSelected","answerText","currentAnswer","find","console","log","result","filteredAnswer","undefined","onTextInputChanged","text","getSelectInput","_this","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","class","onChange","target","value","index","selected","map","option","trim","getCheckInput","_this2","Fragment","style","textAlign","paddingRight","color","fontSize","type","getTextInput","padding","getTextareaInput","width","submitInfo","fullText","_ref","Array","isArray","answerItem","body","JSON","stringify","model","messages","role","content","temperature","headers","Authorization","fetch","method","then","response","json","state","message","choices","_ref2","page","variant","onClick"],"sources":["C:/ReactJS/saudi_chat_gpt/src/FeasibilityInfo.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Button } from \"react-bootstrap\"\r\nimport FormHeader from './FormHeader';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {questionsList} from \"./QuestionsData\"\r\n\r\nfunction FeasibilityInfo() {\r\n\r\n\r\n    let navigate = useNavigate();\r\n\r\n    let [answers, setAnswers] = useState([]);\r\n\r\n    let [loading, setLoading] = useState(false);\r\n\r\n\r\n    let [questions, setQuestions] = useState(questions);\r\n\r\n    let [currentPage, setCurrentPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n\r\n        // console.log(answers)\r\n\r\n    }, [answers])\r\n\r\n    function onSelectAnswerChange(questionIndex, question, item) {\r\n\r\n        let filteredQuestions = answers.filter((item) => item.question !== questionIndex);\r\n\r\n        setAnswers([...filteredQuestions, { questionIndex: questionIndex, question: question, answer: item }])\r\n    }\r\n\r\n    function onCheckBoxAnswerSelected(questionIndex, question, item, answerText) {\r\n\r\n        let currentAnswer = answers.find((item) => item.questionIndex === questionIndex);\r\n\r\n        console.log(currentAnswer);\r\n\r\n        let filteredQuestions = answers.filter((item) => item.questionIndex !== questionIndex);\r\n\r\n        let result = []\r\n\r\n        let filteredAnswer = []\r\n\r\n        if (currentAnswer === undefined) {\r\n            filteredAnswer = [answerText];\r\n            result = [...filteredQuestions, { questionIndex: questionIndex, question: question, answer: filteredAnswer }];\r\n        } else {\r\n            filteredAnswer = [...currentAnswer.answer, answerText];\r\n            result = [...filteredQuestions, { questionIndex: questionIndex, question: question, answer: filteredAnswer }];\r\n        }\r\n\r\n        setAnswers(result)\r\n\r\n    }\r\n\r\n    function onTextInputChanged(text, question, questionIndex) {\r\n\r\n        let filteredQuestions = answers.filter((item) => item.questionIndex !== questionIndex);\r\n\r\n        console.log(questionIndex);\r\n\r\n        let result = [...filteredQuestions, { questionIndex: questionIndex, question: question, answer: text }]\r\n\r\n        setAnswers(result)\r\n\r\n    }\r\n\r\n\r\n    function getSelectInput(question, answer, questionIndex) {\r\n\r\n\r\n        return <div className=\"form-input\">\r\n            <select class=\"form-select\" aria-label=\"Default select example\" onChange={(item) => onSelectAnswerChange(questionIndex, question, item.target.value)}>\r\n                <option index={0} selected>{question}</option>\r\n                {answer.map((option, index) => <option value={index}>{option.trim()}</option>)}\r\n            </select>\r\n        </div>\r\n    }\r\n\r\n    function getCheckInput(question, answer, questionIndex) {\r\n\r\n        return <>\r\n            <div style={{ textAlign: \"right\", paddingRight: 15, color: \"#0497cc\", fontSize: 24, }}><label>{question}</label></div>\r\n            {answer.map((option, index) => <div className=\"form-check form-input\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" onChange={() => onCheckBoxAnswerSelected(questionIndex, question, index, option)} />\r\n                <label className='check-label'>\r\n                    {option}\r\n                </label>\r\n            </div>)}\r\n        </>\r\n\r\n    }\r\n\r\n    function getTextInput(question, answer, questionIndex) {\r\n\r\n        return <div className=\"form-input\">\r\n            <label style={{ padding: 10, color: \"#00A3E0\", fontSize: 18, }}>{question}</label>\r\n            <input className=\"form-control\" type=\"text\" onChange={(item) => onTextInputChanged(item.target.value, question, questionIndex)} />\r\n        </div>\r\n\r\n    }\r\n\r\n    function getTextareaInput(question, answer, questionIndex) {\r\n\r\n        return <div className=\"form-input\">\r\n            <label style={{ padding: 10, color: \"#00A3E0\", fontSize: 18, }}>{question}</label>\r\n            <textarea style={{ width: \"100%\" }} className=\"form-control\" type=\"text\" onChange={(item) => onTextInputChanged(item.target.value, question, questionIndex)} />\r\n        </div>\r\n\r\n    }\r\n\r\n    function submitInfo() {\r\n\r\n        setLoading(true);\r\n\r\n        let fullText = \"\";\r\n\r\n        answers.map(({ question, answer }) => {\r\n\r\n            let answerText = answer\r\n\r\n            if (Array.isArray(answer)) {\r\n\r\n                answerText = \"\";\r\n\r\n                answer.map((answerItem) => {\r\n                    answerText += answerItem + \" و \";\r\n                })\r\n\r\n            }\r\n\r\n            fullText += question + \" هي \" + answerText + \"أصنع لي دراسة جدى\"\r\n\r\n        })\r\n\r\n        console.log(fullText);\r\n\r\n        let body = JSON.stringify({\r\n            model: \"gpt-3.5-turbo\",\r\n            messages: [{ role: \"user\", content: fullText }],\r\n            temperature: 1,\r\n        });\r\n\r\n        let headers = {\r\n            Authorization: \"Bearer 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\",\r\n            'Content-Type': 'application/json'\r\n        };\r\n\r\n        fetch(\"https://api.openai.com/v1/chat/completions\", {\r\n            method: \"POST\", body,\r\n            headers: headers,\r\n        })\r\n            .then((response) => {\r\n                return response.json()\r\n            }).then((answer) => {\r\n                console.log(\"inside then\");\r\n\r\n                setLoading(false);\r\n\r\n                navigate(\"/result/\", { state: { message: answer.choices[0].message.content } });\r\n\r\n            });\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ textAlign: \"center\" }}>\r\n            <header className=\"App-header\">\r\n                معلومات المشروع\r\n            </header>\r\n\r\n            <form className='infoForm col-sm-10 col-md-10 col-lg-10'>\r\n                <fieldset>\r\n                    {/* <div className=\"mb-3 form-input\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"الاسم\" />\r\n                    </div> */}\r\n\r\n                    <FormHeader currentPage={currentPage} />\r\n\r\n                    {questions.map(({ question, answers, page, type }, index) => {\r\n                        // console.log(question, answers)\r\n                        if (page === currentPage) {\r\n\r\n                            if (type === \"select\") {\r\n                                return getSelectInput(question, answers, index)\r\n                            } else if (type === \"checkBox\") {\r\n                                return getCheckInput(question, answers, index)\r\n                            } else if (type === \"textarea\") {\r\n                                return getTextareaInput(question, answers, index)\r\n                            } else {\r\n                                return getTextInput(question, answers, index)\r\n                            }\r\n\r\n                        }\r\n                    })}\r\n\r\n                    <div className=\"formBottom\">\r\n\r\n                        {(currentPage > 1) &&\r\n                            <Button variant=\"primary\" className=\"nextButton\" onClick={() => setCurrentPage(currentPage - 1)}>\r\n                                السابق\r\n                            </Button>\r\n                        }\r\n\r\n                        {\r\n                            (currentPage < 4) ?\r\n                                <Button variant=\"success\" className=\"nextButton\" onClick={() => setCurrentPage(currentPage + 1)}>\r\n                                    التالي\r\n                                </Button>\r\n                                :\r\n                                <Button variant=\"success\" className=\"nextButton\" onClick={() => submitInfo()}>\r\n                                    إجراء دراسة الجدوى\r\n                                </Button>\r\n                        }\r\n\r\n                        {loading &&\r\n                            <div className=\"spinner\" />\r\n                        }\r\n\r\n\r\n                    </div>\r\n\r\n                </fieldset>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FeasibilityInfo"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,iBAAiB;AACxC,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAAQC,aAAa,QAAO,iBAAiB;AAE7C,SAASC,eAAeA,CAAA,EAAG;EAGvB,IAAIC,QAAQ,GAAGH,WAAW,EAAE;EAAC,IAAAI,SAAA,GAEDP,QAAQ,CAAC,EAAE,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAAA,IAAAI,UAAA,GAEIZ,QAAQ,CAAC,KAAK,CAAC;IAAAa,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAtCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAAA,IAAAG,UAAA,GAGQhB,QAAQ,CAACiB,SAAS,CAAC;IAAAC,UAAA,GAAAT,cAAA,CAAAO,UAAA;IAA9CC,SAAS,GAAAC,UAAA;IAAEC,YAAY,GAAAD,UAAA;EAAA,IAAAE,UAAA,GAEQpB,QAAQ,CAAC,CAAC,CAAC;IAAAqB,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA1CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAEhCtB,SAAS,CAAC,YAAM;;IAEZ;EAAA,CAEH,EAAE,CAACW,OAAO,CAAC,CAAC;EAEb,SAASc,oBAAoBA,CAACC,aAAa,EAAEC,QAAQ,EAAEC,IAAI,EAAE;IAEzD,IAAIC,iBAAiB,GAAGlB,OAAO,CAACmB,MAAM,CAAC,UAACF,IAAI;MAAA,OAAKA,IAAI,CAACD,QAAQ,KAAKD,aAAa;IAAA,EAAC;IAEjFd,UAAU,IAAAmB,MAAA,CAAAC,kBAAA,CAAKH,iBAAiB,IAAE;MAAEH,aAAa,EAAEA,aAAa;MAAEC,QAAQ,EAAEA,QAAQ;MAAEM,MAAM,EAAEL;IAAK,CAAC,GAAE;EAC1G;EAEA,SAASM,wBAAwBA,CAACR,aAAa,EAAEC,QAAQ,EAAEC,IAAI,EAAEO,UAAU,EAAE;IAEzE,IAAIC,aAAa,GAAGzB,OAAO,CAAC0B,IAAI,CAAC,UAACT,IAAI;MAAA,OAAKA,IAAI,CAACF,aAAa,KAAKA,aAAa;IAAA,EAAC;IAEhFY,OAAO,CAACC,GAAG,CAACH,aAAa,CAAC;IAE1B,IAAIP,iBAAiB,GAAGlB,OAAO,CAACmB,MAAM,CAAC,UAACF,IAAI;MAAA,OAAKA,IAAI,CAACF,aAAa,KAAKA,aAAa;IAAA,EAAC;IAEtF,IAAIc,MAAM,GAAG,EAAE;IAEf,IAAIC,cAAc,GAAG,EAAE;IAEvB,IAAIL,aAAa,KAAKM,SAAS,EAAE;MAC7BD,cAAc,GAAG,CAACN,UAAU,CAAC;MAC7BK,MAAM,MAAAT,MAAA,CAAAC,kBAAA,CAAOH,iBAAiB,IAAE;QAAEH,aAAa,EAAEA,aAAa;QAAEC,QAAQ,EAAEA,QAAQ;QAAEM,MAAM,EAAEQ;MAAe,CAAC,EAAC;IACjH,CAAC,MAAM;MACHA,cAAc,MAAAV,MAAA,CAAAC,kBAAA,CAAOI,aAAa,CAACH,MAAM,IAAEE,UAAU,EAAC;MACtDK,MAAM,MAAAT,MAAA,CAAAC,kBAAA,CAAOH,iBAAiB,IAAE;QAAEH,aAAa,EAAEA,aAAa;QAAEC,QAAQ,EAAEA,QAAQ;QAAEM,MAAM,EAAEQ;MAAe,CAAC,EAAC;IACjH;IAEA7B,UAAU,CAAC4B,MAAM,CAAC;EAEtB;EAEA,SAASG,kBAAkBA,CAACC,IAAI,EAAEjB,QAAQ,EAAED,aAAa,EAAE;IAEvD,IAAIG,iBAAiB,GAAGlB,OAAO,CAACmB,MAAM,CAAC,UAACF,IAAI;MAAA,OAAKA,IAAI,CAACF,aAAa,KAAKA,aAAa;IAAA,EAAC;IAEtFY,OAAO,CAACC,GAAG,CAACb,aAAa,CAAC;IAE1B,IAAIc,MAAM,MAAAT,MAAA,CAAAC,kBAAA,CAAOH,iBAAiB,IAAE;MAAEH,aAAa,EAAEA,aAAa;MAAEC,QAAQ,EAAEA,QAAQ;MAAEM,MAAM,EAAEW;IAAK,CAAC,EAAC;IAEvGhC,UAAU,CAAC4B,MAAM,CAAC;EAEtB;EAGA,SAASK,cAAcA,CAAClB,QAAQ,EAAEM,MAAM,EAAEP,aAAa,EAAE;IAAA,IAAAoB,KAAA;IAGrD,oBAAO/C,KAAA,CAAAgD,aAAA;MAAKC,SAAS,EAAC,YAAY;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC9BvD,KAAA,CAAAgD,aAAA;MAAQQ,KAAK,EAAC,aAAa;MAAC,cAAW,wBAAwB;MAACC,QAAQ,EAAE,SAAAA,SAAC5B,IAAI;QAAA,OAAKH,oBAAoB,CAACC,aAAa,EAAEC,QAAQ,EAAEC,IAAI,CAAC6B,MAAM,CAACC,KAAK,CAAC;MAAA,CAAC;MAAAT,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACjJvD,KAAA,CAAAgD,aAAA;MAAQY,KAAK,EAAE,CAAE;MAACC,QAAQ;MAAAX,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAE3B,QAAQ,CAAU,EAC7CM,MAAM,CAAC4B,GAAG,CAAC,UAACC,MAAM,EAAEH,KAAK;MAAA,oBAAK5D,KAAA,CAAAgD,aAAA;QAAQW,KAAK,EAAEC,KAAM;QAAAV,MAAA,EAAAH,KAAA;QAAAI,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAAEQ,MAAM,CAACC,IAAI,EAAE,CAAU;IAAA,EAAC,CACzE,CACP;EACV;EAEA,SAASC,aAAaA,CAACrC,QAAQ,EAAEM,MAAM,EAAEP,aAAa,EAAE;IAAA,IAAAuC,MAAA;IAEpD,oBAAOlE,KAAA,CAAAgD,aAAA,CAAAhD,KAAA,CAAAmE,QAAA,qBACHnE,KAAA,CAAAgD,aAAA;MAAKoB,KAAK,EAAE;QAAEC,SAAS,EAAE,OAAO;QAAEC,YAAY,EAAE,EAAE;QAAEC,KAAK,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAI,CAAE;MAAAtB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAACvD,KAAA,CAAAgD,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAQ3B,QAAQ,CAAS,CAAM,EACrHM,MAAM,CAAC4B,GAAG,CAAC,UAACC,MAAM,EAAEH,KAAK;MAAA,oBAAK5D,KAAA,CAAAgD,aAAA;QAAKC,SAAS,EAAC,uBAAuB;QAAAC,MAAA,EAAAgB,MAAA;QAAAf,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACjEvD,KAAA,CAAAgD,aAAA;QAAOC,SAAS,EAAC,kBAAkB;QAACwB,IAAI,EAAC,UAAU;QAAChB,QAAQ,EAAE,SAAAA,SAAA;UAAA,OAAMtB,wBAAwB,CAACR,aAAa,EAAEC,QAAQ,EAAEgC,KAAK,EAAEG,MAAM,CAAC;QAAA,CAAC;QAAAb,MAAA,EAAAgB,MAAA;QAAAf,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,EAAG,eACxIvD,KAAA,CAAAgD,aAAA;QAAOC,SAAS,EAAC,aAAa;QAAAC,MAAA,EAAAgB,MAAA;QAAAf,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GACzBQ,MAAM,CACH,CACN;IAAA,EAAC,CACR;EAEP;EAEA,SAASW,YAAYA,CAAC9C,QAAQ,EAAEM,MAAM,EAAEP,aAAa,EAAE;IAEnD,oBAAO3B,KAAA,CAAAgD,aAAA;MAAKC,SAAS,EAAC,YAAY;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC9BvD,KAAA,CAAAgD,aAAA;MAAOoB,KAAK,EAAE;QAAEO,OAAO,EAAE,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAI,CAAE;MAAAtB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAE3B,QAAQ,CAAS,eAClF5B,KAAA,CAAAgD,aAAA;MAAOC,SAAS,EAAC,cAAc;MAACwB,IAAI,EAAC,MAAM;MAAChB,QAAQ,EAAE,SAAAA,SAAC5B,IAAI;QAAA,OAAKe,kBAAkB,CAACf,IAAI,CAAC6B,MAAM,CAACC,KAAK,EAAE/B,QAAQ,EAAED,aAAa,CAAC;MAAA,CAAC;MAAAuB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EAAG,CAChI;EAEV;EAEA,SAASqB,gBAAgBA,CAAChD,QAAQ,EAAEM,MAAM,EAAEP,aAAa,EAAE;IAEvD,oBAAO3B,KAAA,CAAAgD,aAAA;MAAKC,SAAS,EAAC,YAAY;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC9BvD,KAAA,CAAAgD,aAAA;MAAOoB,KAAK,EAAE;QAAEO,OAAO,EAAE,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAI,CAAE;MAAAtB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAE3B,QAAQ,CAAS,eAClF5B,KAAA,CAAAgD,aAAA;MAAUoB,KAAK,EAAE;QAAES,KAAK,EAAE;MAAO,CAAE;MAAC5B,SAAS,EAAC,cAAc;MAACwB,IAAI,EAAC,MAAM;MAAChB,QAAQ,EAAE,SAAAA,SAAC5B,IAAI;QAAA,OAAKe,kBAAkB,CAACf,IAAI,CAAC6B,MAAM,CAACC,KAAK,EAAE/B,QAAQ,EAAED,aAAa,CAAC;MAAA,CAAC;MAAAuB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EAAG,CAC7J;EAEV;EAEA,SAASuB,UAAUA,CAAA,EAAG;IAElB7D,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI8D,QAAQ,GAAG,EAAE;IAEjBnE,OAAO,CAACkD,GAAG,CAAC,UAAAkB,IAAA,EAA0B;MAAA,IAAvBpD,QAAQ,GAAAoD,IAAA,CAARpD,QAAQ;QAAEM,MAAM,GAAA8C,IAAA,CAAN9C,MAAM;MAE3B,IAAIE,UAAU,GAAGF,MAAM;MAEvB,IAAI+C,KAAK,CAACC,OAAO,CAAChD,MAAM,CAAC,EAAE;QAEvBE,UAAU,GAAG,EAAE;QAEfF,MAAM,CAAC4B,GAAG,CAAC,UAACqB,UAAU,EAAK;UACvB/C,UAAU,IAAI+C,UAAU,GAAG,KAAK;QACpC,CAAC,CAAC;MAEN;MAEAJ,QAAQ,IAAInD,QAAQ,GAAG,MAAM,GAAGQ,UAAU,GAAG,mBAAmB;IAEpE,CAAC,CAAC;IAEFG,OAAO,CAACC,GAAG,CAACuC,QAAQ,CAAC;IAErB,IAAIK,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;MACtBC,KAAK,EAAE,eAAe;MACtBC,QAAQ,EAAE,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAEX;MAAS,CAAC,CAAC;MAC/CY,WAAW,EAAE;IACjB,CAAC,CAAC;IAEF,IAAIC,OAAO,GAAG;MACVC,aAAa,EAAE,4DAA4D;MAC3E,cAAc,EAAE;IACpB,CAAC;IAEDC,KAAK,CAAC,4CAA4C,EAAE;MAChDC,MAAM,EAAE,MAAM;MAAEX,IAAI,EAAJA,IAAI;MACpBQ,OAAO,EAAEA;IACb,CAAC,CAAC,CACGI,IAAI,CAAC,UAACC,QAAQ,EAAK;MAChB,OAAOA,QAAQ,CAACC,IAAI,EAAE;IAC1B,CAAC,CAAC,CAACF,IAAI,CAAC,UAAC9D,MAAM,EAAK;MAChBK,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAE1BvB,UAAU,CAAC,KAAK,CAAC;MAEjBT,QAAQ,CAAC,UAAU,EAAE;QAAE2F,KAAK,EAAE;UAAEC,OAAO,EAAElE,MAAM,CAACmE,OAAO,CAAC,CAAC,CAAC,CAACD,OAAO,CAACV;QAAQ;MAAE,CAAC,CAAC;IAEnF,CAAC,CAAC;EAGV;EAGA,oBACI1F,KAAA,CAAAgD,aAAA;IAAKoB,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAnB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChCvD,KAAA,CAAAgD,aAAA;IAAQC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,uFAE/B,CAAS,eAETvD,KAAA,CAAAgD,aAAA;IAAMC,SAAS,EAAC,wCAAwC;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpDvD,KAAA,CAAAgD,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAKIvD,KAAA,CAAAgD,aAAA,CAAC5C,UAAU;IAACoB,WAAW,EAAEA,WAAY;IAAA0B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,EAEvCpC,SAAS,CAAC2C,GAAG,CAAC,UAAAwC,KAAA,EAAoC1C,KAAK,EAAK;IAAA,IAA3ChC,QAAQ,GAAA0E,KAAA,CAAR1E,QAAQ;MAAEhB,OAAO,GAAA0F,KAAA,CAAP1F,OAAO;MAAE2F,IAAI,GAAAD,KAAA,CAAJC,IAAI;MAAE9B,IAAI,GAAA6B,KAAA,CAAJ7B,IAAI;IAC3C;IACA,IAAI8B,IAAI,KAAK/E,WAAW,EAAE;MAEtB,IAAIiD,IAAI,KAAK,QAAQ,EAAE;QACnB,OAAO3B,cAAc,CAAClB,QAAQ,EAAEhB,OAAO,EAAEgD,KAAK,CAAC;MACnD,CAAC,MAAM,IAAIa,IAAI,KAAK,UAAU,EAAE;QAC5B,OAAOR,aAAa,CAACrC,QAAQ,EAAEhB,OAAO,EAAEgD,KAAK,CAAC;MAClD,CAAC,MAAM,IAAIa,IAAI,KAAK,UAAU,EAAE;QAC5B,OAAOG,gBAAgB,CAAChD,QAAQ,EAAEhB,OAAO,EAAEgD,KAAK,CAAC;MACrD,CAAC,MAAM;QACH,OAAOc,YAAY,CAAC9C,QAAQ,EAAEhB,OAAO,EAAEgD,KAAK,CAAC;MACjD;IAEJ;EACJ,CAAC,CAAC,eAEF5D,KAAA,CAAAgD,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAErB/B,WAAW,GAAG,CAAC,iBACbxB,KAAA,CAAAgD,aAAA,CAAC7C,MAAM;IAACqG,OAAO,EAAC,SAAS;IAACvD,SAAS,EAAC,YAAY;IAACwD,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMhF,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IAAA,CAAC;IAAA0B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,sCAEjG,CAAS,EAIR/B,WAAW,GAAG,CAAC,gBACZxB,KAAA,CAAAgD,aAAA,CAAC7C,MAAM;IAACqG,OAAO,EAAC,SAAS;IAACvD,SAAS,EAAC,YAAY;IAACwD,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMhF,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IAAA,CAAC;IAAA0B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,sCAEjG,CAAS,gBAETvD,KAAA,CAAAgD,aAAA,CAAC7C,MAAM;IAACqG,OAAO,EAAC,SAAS;IAACvD,SAAS,EAAC,YAAY;IAACwD,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAM3B,UAAU,EAAE;IAAA,CAAC;IAAA5B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,oGAE9E,CAAS,EAGhBvC,OAAO,iBACJhB,KAAA,CAAAgD,aAAA;IAAKC,SAAS,EAAC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,CAI7B,CAEC,CACR,CAEL;AAEd;AAEA,eAAehD,eAAe"},"metadata":{},"sourceType":"module"}